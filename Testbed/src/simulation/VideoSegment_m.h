//
// Generated file, do not edit! Created by nedtool 5.2 from src/simulation/VideoSegment.msg.
//

#if defined(__clang__)
#  pragma clang diagnostic ignored "-Wreserved-id-macro"
#endif
#ifndef __VIDEOSEGMENT_M_H
#define __VIDEOSEGMENT_M_H

#include <omnetpp.h>

// nedtool version check
#define MSGC_VERSION 0x0502
#if (MSGC_VERSION!=OMNETPP_VERSION)
#    error Version mismatch! Probably this file was generated by an earlier version of nedtool: 'make clean' should help.
#endif



/**
 * Class generated from <tt>src/simulation/VideoSegment.msg:24</tt> by nedtool.
 * <pre>
 * message VideoSegment
 * {
 *     int count = 1;
 *     int clientId = 1;
 *     int segmentId = 1;
 *     string videoId = "";
 *     string duration = "";
 *     string uploaded = "";
 *     string uploaded_datetime = "";
 *     string uploader = "";
 *     string category = "";
 *     int requested = 1;
 *     bool seenAbove = false;
 *     int size = 75;
 *     //VideoMetaData metaData;
 * }
 * </pre>
 */
class VideoSegment : public ::omnetpp::cMessage
{
  protected:
    int count;
    int clientId;
    int segmentId;
    ::omnetpp::opp_string videoId;
    ::omnetpp::opp_string duration;
    ::omnetpp::opp_string uploaded;
    ::omnetpp::opp_string uploaded_datetime;
    ::omnetpp::opp_string uploader;
    ::omnetpp::opp_string category;
    int requested;
    bool seenAbove;
    int size;

  private:
    void copy(const VideoSegment& other);

  protected:
    // protected and unimplemented operator==(), to prevent accidental usage
    bool operator==(const VideoSegment&);

  public:
    VideoSegment(const char *name=nullptr, short kind=0);
    VideoSegment(const VideoSegment& other);
    virtual ~VideoSegment();
    VideoSegment& operator=(const VideoSegment& other);
    virtual VideoSegment *dup() const override {return new VideoSegment(*this);}
    virtual void parsimPack(omnetpp::cCommBuffer *b) const override;
    virtual void parsimUnpack(omnetpp::cCommBuffer *b) override;

    // field getter/setter methods
    virtual int getCount() const;
    virtual void setCount(int count);
    virtual int getClientId() const;
    virtual void setClientId(int clientId);
    virtual int getSegmentId() const;
    virtual void setSegmentId(int segmentId);
    virtual const char * getVideoId() const;
    virtual void setVideoId(const char * videoId);
    virtual const char * getDuration() const;
    virtual void setDuration(const char * duration);
    virtual const char * getUploaded() const;
    virtual void setUploaded(const char * uploaded);
    virtual const char * getUploaded_datetime() const;
    virtual void setUploaded_datetime(const char * uploaded_datetime);
    virtual const char * getUploader() const;
    virtual void setUploader(const char * uploader);
    virtual const char * getCategory() const;
    virtual void setCategory(const char * category);
    virtual int getRequested() const;
    virtual void setRequested(int requested);
    virtual bool getSeenAbove() const;
    virtual void setSeenAbove(bool seenAbove);
    virtual int getSize() const;
    virtual void setSize(int size);
};

inline void doParsimPacking(omnetpp::cCommBuffer *b, const VideoSegment& obj) {obj.parsimPack(b);}
inline void doParsimUnpacking(omnetpp::cCommBuffer *b, VideoSegment& obj) {obj.parsimUnpack(b);}


#endif // ifndef __VIDEOSEGMENT_M_H

